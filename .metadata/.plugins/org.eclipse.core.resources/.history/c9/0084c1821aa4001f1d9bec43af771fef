package in.thiru.service;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.razorpay.Order;
import com.razorpay.OrderRequest;
import com.razorpay.RazorpayException;

@Service
public class RazorpayService {
	
	
	 @Value("${razorpay.key.id}")
	    private String razorpayKeyId;

	    @Value("${razorpay.key.secret}")
	    private String razorpayKeySecret;

	    private Client razorpayClient;

	    public RazorpayService() {
	        try {
	            this.razorpayClient = new Client(razorpayKeyId, razorpayKeySecret);
	        } catch (RazorpayException e) {
	            e.printStackTrace();
	        }
	    }

	    // Method to create a Razorpay order
	    public Order createOrder(double amount) throws RazorpayException {
	        double amountInPaise = amount * 100; // Convert to paise

	        OrderRequest orderRequest = new OrderRequest();
	        orderRequest.setAmount((long) amountInPaise);
	        orderRequest.setCurrency("INR");
	        orderRequest.setPaymentCapture(1); // Automatically capture the payment

	        return razorpayClient.orders.create(orderRequest);
	    }

	    // Method to verify payment signature
	    public boolean verifyPayment(String paymentId, String orderId, String signature) throws RazorpayException {
	        try {
	            return razorpayClient.utility.verifyPaymentSignature(paymentId, orderId, signature);
	        } catch (RazorpayException e) {
	            e.printStackTrace();
	            return false;
	        }
	    }

}
